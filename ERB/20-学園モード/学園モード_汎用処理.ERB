;@学校一覧
;#DIM DYNAMIC LCOUNT
;FOR LCOUNT, 0, VARSIZE("学校名")
;	PRINTFORMLC 　[{LCOUNT}] - %学校名:LCOUNT%
;NEXT
;CALL NEWLINE

;-------------------------------------------------
;簡単な処理や式中関数


;;;主人公に名前があるか
@名前あり()
#FUNCTION
SIF CALLNAME:PLAYER == "あなた" || プレイヤー名無しフラグ
	RETURNF 0
RETURNF 1


;;;引数の2人の間の相性を上昇させる関数
@相性増加, 対象, 相手, 上昇値
#DIM DYNAMIC 上昇値
#DIM DYNAMIC 対象
#DIM DYNAMIC 相手
RELATION:対象:NOF(相手) += 上昇値
RELATION:相手:NOF(対象) += 上昇値


;;;恋人処理とメッセージ表示
@恋仲, 対象
#DIM DYNAMIC 対象
TALENT:対象:恋慕 = 1
PRINTFORML %NAME:対象%が恋人になった！
CALL 経験値取得, 対象, "学園"


;;;連絡先入手とメッセージ表示
@連絡先入手, 対象
#DIM DYNAMIC 対象
連絡先:(NO:対象) = 1
PRINTFORML 連絡先入手:%NAME:対象%


@連絡先入手済み, 対象
#FUNCTION
#DIM DYNAMIC 対象
SIF 連絡先:(NO:対象)
	RETURNF 1
RETURNF 0


@好感度合計, 対象
#FUNCTION
#DIM DYNAMIC 対象
RETURNF SUMARRAY(好感度:対象:0)


;;;夏休み、冬休み、春休み判定
@ISHOLIDAY_SCHOOL, 月 = -1, 日 = -1, 季節
#FUNCTION
#DIM DYNAMIC 月
#DIM DYNAMIC 日
#DIMS DYNAMIC 季節
SIF 月 == -1
	月 = MONTH
SIF 日 == -1
	日 = DAYS
SIF !GROUPMATCH(季節, "夏", "冬", "春")
	季節 = 
SIF GROUPMATCH(季節, "夏", "") && INRANGE(月*100+日, 722, 831)
	RETURNF 1
SIF GROUPMATCH(季節, "冬", "") && INRANGE(月*100+日, 1224, 1231) || INRANGE(月*100+日, 101, 107)
	RETURNF 1
SIF GROUPMATCH(季節, "春", "") && INRANGE(月*100+日, 325, 406)
	RETURNF 1
RETURNF 0


@夏休み, 月 = -1, 日 = -1
#FUNCTION
#DIM DYNAMIC 月
#DIM DYNAMIC 日
RETURNF ISHOLIDAY_SCHOOL(月, 日, "夏")


@冬休み, 月 = -1, 日 = -1
#FUNCTION
#DIM DYNAMIC 月
#DIM DYNAMIC 日
RETURNF ISHOLIDAY_SCHOOL(月, 日, "冬")


@春休み, 月 = -1, 日 = -1
#FUNCTION
#DIM DYNAMIC 月
#DIM DYNAMIC 日
RETURNF ISHOLIDAY_SCHOOL(月, 日, "春")


;;;登校日判定
;;;休日でも長期休暇でもなければ1を返す
@登校日, 年 = -1, 月 = -1, 日 = -1
#FUNCTION
#DIM DYNAMIC 年
#DIM DYNAMIC 月
#DIM DYNAMIC 日
SIF 年 == -1
	年 = YEAR
SIF 月 == -1
	月 = MONTH
SIF 日 == -1
	日 = DAYS
IF !休日(年, 月, 日) && !ISHOLIDAY_SCHOOL(月, 日)
	RETURNF 1
ELSE
	RETURNF 0
ENDIF


;;;現在地フリーなキャラが一人でもいればtrue
@キャラ現在地判定, キャラ名, キャラ名:1, キャラ名:2, キャラ名:3, キャラ名:4
#FUNCTION
#DIMS DYNAMIC キャラ名, 5
#DIM DYNAMIC LCOUNT
FOR LCOUNT, 0, VARSIZE("キャラ名")
	SIF キャラ名:LCOUNT != "" && CSTR:GETCHARANAME(キャラ名:LCOUNT):現在地 == ""
		RETURNF 1
NEXT
RETURNF 0


;;;出現率が設定されてるキャラからランダムで一人選出する 運命の人優先
@出現キャラランダム選出
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 滞在キャラ, 1000
FOR LCOUNT, 1, CHARANUM
	SIF 出現率:LCOUNT && CSTR:LCOUNT:現在地 == ""
		ARRAYSHIFT 滞在キャラ, 1, LCOUNT
NEXT
IF 滞在キャラ:0 != 0
	IF FINDELEMENT(滞在キャラ, GETCHARANAME(運命の人)) >= 0
		RETURN GETCHARANAME(運命の人)
	ELSE
		RETURN 滞在キャラ:(RAND:FINDELEMENT(滞在キャラ, 0))
	ENDIF
ENDIF
RETURN 0


;;;指定した学校の在校生をランダムで一人選出 呼ばれるたびに変わるため、使う場合は別変数に退避推奨
@在校生ランダム選出, 学校, 特殊在校含
#FUNCTION
#DIM DYNAMIC LCOUNT
#DIMS DYNAMIC 学校
#DIM DYNAMIC 人数
#DIM DYNAMIC リスト, 1000
#DIM DYNAMIC 特殊在校含
FOR LCOUNT, 1, CHARANUM
	IF CSTR:LCOUNT:在校 == 学校
		SIF CFLAG:LCOUNT:特殊在校 && !特殊在校含
			CONTINUE
		リスト:(人数++) = LCOUNT
	ENDIF
NEXT
SIF 人数 == 0
	RETURNF -1
RETURNF リスト:(RAND:人数)


;;;指定した学校の、指定した科目の教師を取得 複数居る場合はランダム
@教師取得, 学校, 科目
#FUNCTION
#DIM DYNAMIC LCOUNT
#DIMS DYNAMIC 学校
#DIMS DYNAMIC 科目
#DIM DYNAMIC 人数
#DIM DYNAMIC リスト, 1000
FOR LCOUNT, 1, CHARANUM
	SIF CSTR:LCOUNT:在任 == 学校 && CSTR:LCOUNT:担当科目 == 科目
		リスト:(人数++) = LCOUNT
NEXT
SIF 人数 == 0
	RETURNF -1
RETURNF リスト:(RAND:人数)


;-------------------------------------------------
;長いもの


;;;学園モードの名前表示処理
;;;第1引数に対象のIDを代入、第2引数が0以外なら在任しているキャラに「先生」をつける
@SNAME, 対象, 先生 = 0
#DIM DYNAMIC 対象
#DIM DYNAMIC 先生
#DIM DYNAMIC 好感度値
#DIMS DYNAMIC 表示好感度
#DIMS DYNAMIC 表記

SIF NAME:対象 == 運命の人
	SETCOLORBYNAME coral
PRINTFORM %NAME:対象%
RESETCOLOR
SIF 先生 && CSTR:対象:在任 != ""
	PRINT 先生
IF ラブスコープ使用
	表示好感度 = %ラブスコープ表示名()%
	SELECTCASE 表示好感度
		CASE "好感度合計"
			好感度値 = 好感度合計(対象)
		CASE "インモラル"
			好感度値 = CFLAG:対象:インモラル
		CASEELSE
			好感度値 = 好感度:対象:(ラブスコープ使用-1)
			IF 表示好感度 == "舎弟or母性"
				IF SEX(対象) == 2 || NAME:対象 == "ハニー"
					表示好感度 = 母性
				ELSE
					表示好感度 = 舎弟
				ENDIF
			ENDIF
	ENDSELECT
	IF ラブスコープ短縮表記
		SELECTCASE 表示好感度
			CASE "友情"
				表記 = 友
			CASE "ときめき"
				表記 = 恋
			CASE "尊敬"
				表記 = 敬
			CASE "舎弟"
				表記 = 舎
			CASE "母性"
				表記 = 母
			CASE "セフレ"
				表記 = セ
			CASE "既成事実"
				表記 = 既
			CASE "好感度合計"
				表記 = 計
			CASE "インモラル"
				表記 = 倫
		ENDSELECT
	ELSE
		表記 = %表示好感度%
	ENDIF
	CALL PRINTCOLOR, @"(%表記%:{好感度値})", 好感度色分け(表示好感度, 好感度値)
ENDIF


@好感度色分け, 種類, 好感度値
#FUNCTIONS
#DIMS DYNAMIC 種類
#DIM DYNAMIC 好感度値
SELECTCASE 種類
	CASE "インモラル"
		SELECTCASE 好感度値
			CASE 0
				RETURNF "0x404040"
			CASE 10 TO 29
				RETURNF "lime"
			CASE 30 TO 49
				RETURNF "yellow"
			CASE IS >= 50
				RETURNF "coral"
		ENDSELECT
	CASE "既成事実"
		SELECTCASE 好感度値
			CASE 0
				RETURNF "0x404040"
			CASE 1 TO 4
				RETURNF ""
			CASE 5 TO 9
				RETURNF "lime"
			CASE 10 TO 14
				RETURNF "deepskyblue"
			CASE 15 TO 19
				RETURNF "violet"
			CASE IS >= 20
				RETURNF "coral"
		ENDSELECT
	CASEELSE
		SELECTCASE 好感度値
			CASE 0
				RETURNF "0x404040"
			CASE 1 TO 99
				RETURNF ""
			CASE 100 TO 299
				RETURNF "lime"
			CASE 300 TO 499
				RETURNF "deepskyblue"
			CASE 500 TO 999
				RETURNF "violet"
			CASE IS >= 1000
				RETURNF "coral"
		ENDSELECT
ENDSELECT

;;;好感度上昇とメッセージ表示を行う
@好感度上昇, 対象, 好感度種類, 上昇値
#DIM DYNAMIC 対象
#DIMS DYNAMIC 好感度種類
#DIM DYNAMIC 上昇値
#DIM DYNAMIC LCOUNT
;なんか全体的に数値が重く感じたので2倍にしてみる
#DIM DYNAMIC 倍率 = 200

;上昇値は既成事実以外は5刻みで渡されるはず
;なので倍率は20刻みになるのがちょうどいい

;口上側での上昇値補正の加算
SIF 好感度種類 != "既成事実"
	上昇値 += 好感度補正:好感度種類

;素質等での補正を入れる
SELECTCASE 好感度種類
	CASE "友情"
		FOR LCOUNT, 0, VARSIZE("TALENT")
			SIF !TALENT:対象:LCOUNT
				CONTINUE
			SELECTCASE TALENTNAME:LCOUNT
				{
				CASE "反抗的", "プライド高い", "弱気", "ツンデレ", "無関心", "保守的", "抑圧",
					 "恥じらい", "弱味"
				}
					倍率 -= 20
				{
				CASE "素直", "プライド低い", "ハイテンション", "寂しがり屋", "幼稚", "楽観的", "目立ちたがり",
					 "解放", "好奇心", "世話好き"
				}
					倍率 += 20
				CASE "即落ち"
					倍率 += 40
				CASE "男好き"
					SIF SEX(PLAYER) == 1
						倍率 += 40
				CASE "女好き"
					SIF SEX(PLAYER) == 2
						倍率 += 40
				CASE "男嫌い"
					SIF SEX(PLAYER) == 1
						倍率 -= 40
				CASE "女嫌い"
					SIF SEX(PLAYER) == 2
						倍率 -= 40
				CASE "同族嫌悪"
					SIF CSTR:対象:種族 == CSTR:PLAYER:種族
						倍率 -= 40
				CASE "子供好き"
					SIF TALENT:PLAYER:体格 <= 2
						倍率 += 20
				CASE "恋心"
					SIF TALENT:対象:恋心 == NO:PLAYER
						倍率 += 20
				CASE "既婚者"
					SIF TALENT:対象:既婚者 == NO:PLAYER
						倍率 += 40
			ENDSELECT
		NEXT
	CASE "ときめき"
		;性別同じだとときめきづらい
		IF SEX(対象) == SEX(PLAYER)
			IF SEX(PLAYER) == 1 && !TALENT:対象:男好き
				倍率 -= 20
			ELSEIF SEX(PLAYER) == 2 && !TALENT:対象:女好き
				倍率 -= 20
			ENDIF
		ENDIF
		FOR LCOUNT, 0, VARSIZE("TALENT")
			SIF !TALENT:対象:LCOUNT
				CONTINUE
			SELECTCASE TALENTNAME:LCOUNT
				{
				CASE "生意気", "臆病", "冷静", "大人しい", "幼稚", "自制心", "無関心", "感情乏しい",
						"悲観的", "抑圧"
				}
					倍率 -= 20
				{
				CASE "素直", "衝動的", "寂しがり屋", "ツンデレ", "解放", "恥薄い"
				}
					倍率 += 20
				CASE "即落ち", "ヤンデレ"
					倍率 += 40
				CASE "男好き"
					SIF SEX(PLAYER) == 1
						倍率 += 20
				CASE "女好き"
					SIF SEX(PLAYER) == 2
						倍率 += 20
				CASE "男嫌い"
					SIF SEX(PLAYER) == 1
						倍率 -= 40
				CASE "女嫌い"
					SIF SEX(PLAYER) == 2
						倍率 -= 40
				CASE "同族嫌悪"
					SIF CSTR:対象:種族 == CSTR:PLAYER:種族
						倍率 -= 40
				CASE "子供好き"
					SIF TALENT:PLAYER:体格 <= 2
						倍率 += 20
				CASE "恋心"
					IF TALENT:対象:恋心 == NO:PLAYER
						倍率 += 20
					ELSE
						倍率 -= 40
					ENDIF
				CASE "既婚者"
					IF TALENT:対象:既婚者 == NO:PLAYER
						倍率 += 40
					ELSE
						倍率 -= 60
					ENDIF
			ENDSELECT
		NEXT
	CASE "尊敬"
		FOR LCOUNT, 0, VARSIZE("TALENT")
			SIF !TALENT:対象:LCOUNT
				CONTINUE
			SELECTCASE TALENTNAME:LCOUNT
				CASE "生意気", "反抗的", "プライド高い", "強気", "ツンデレ"
					倍率 -= 20
				CASE "臆病", "冷静", "プライド低い", "大人しい", "弱気", "寂しがり屋", "ヤンデレ", "幼稚", "献身的"
					倍率 += 20
				CASE "即落ち"
					倍率 += 40
				CASE "同族嫌悪"
					SIF CSTR:対象:種族 == CSTR:PLAYER:種族
						倍率 -= 40
				CASE "子供好き"
					SIF TALENT:PLAYER:体格 <= 2
						倍率 -= 20
				CASE "恋心"
					SIF TALENT:対象:恋心 == NO:PLAYER
						倍率 += 20
				CASE "既婚者"
					SIF TALENT:対象:既婚者 == NO:PLAYER
						倍率 += 40
			ENDSELECT
		NEXT
	CASE "舎弟"
		FOR LCOUNT, 0, VARSIZE("TALENT")
			SIF !TALENT:対象:LCOUNT
				CONTINUE
			SELECTCASE TALENTNAME:LCOUNT
				CASE "臆病", "プライド低い", "大人しい", "弱気", "悲観的", "抑圧", ""
					倍率 -= 20
				{
				CASE "生意気", "反抗的", "冷静", "プライド高い", "強気", "ツンデレ", "自制心", "保守的", "目立ちたがり", "気丈",
					 "統率", "世話好き"
				}
					倍率 += 20
				CASE "即落ち"
					倍率 += 40
				CASE "同族嫌悪"
					SIF CSTR:対象:種族 == CSTR:PLAYER:種族
						倍率 -= 40
				CASE "子供好き"
					SIF TALENT:PLAYER:体格 <= 2
						倍率 += 20
				CASE "恋心"
					SIF TALENT:対象:恋心 == NO:PLAYER
						倍率 += 20
				CASE "既婚者"
					SIF TALENT:対象:既婚者 == NO:PLAYER
						倍率 += 40
			ENDSELECT
		NEXT
	CASE "セフレ"
		;性別同じだと上がりづらい
		IF SEX(対象) == SEX(PLAYER)
			IF SEX(PLAYER) == 1 && !TALENT:対象:男好き
				倍率 -= 40
			ELSEIF SEX(PLAYER) == 2 && !TALENT:対象:女好き
				倍率 -= 40
			ENDIF
		ENDIF
		FOR LCOUNT, 0, VARSIZE("TALENT")
			SIF !TALENT:対象:LCOUNT
				CONTINUE
			SELECTCASE TALENTNAME:LCOUNT
				{
				CASE "臆病", "大人しい", "幼稚", "自制心", "無関心", "一線越えない", "貞操観念", "恥じらい", "快感の否定",
						"潔癖症", 
				}
					倍率 -= 20
				{
				CASE "衝動的", "プライド低い", "ハイテンション", "弱気", "ツンデレ", "好奇心", "楽観的", "貞操無頓着",
						"解放", "恥薄い", "弱味", "快感に素直", "中毒しやすい", "濡れやすい", "勃ちやすい", "自慰しやすい"
				}
					倍率 += 20
				CASE "即落ち", "ヤンデレ"
					倍率 += 40
				CASE "男好き"
					SIF SEX(PLAYER) == 1
						倍率 += 20
				CASE "女好き"
					SIF SEX(PLAYER) == 2
						倍率 += 20
				CASE "男嫌い"
					SIF SEX(PLAYER) == 1
						倍率 -= 40
				CASE "女嫌い"
					SIF SEX(PLAYER) == 2
						倍率 -= 40
				CASE "同族嫌悪"
					SIF CSTR:対象:種族 == CSTR:PLAYER:種族
						倍率 -= 40
				CASE "子供好き"
					SIF TALENT:PLAYER:体格 <= 2
						倍率 += 20
				CASE "恋心"
					IF TALENT:対象:恋心 == NO:PLAYER
						倍率 += 20
					ELSE
						倍率 -= 60
					ENDIF
				CASE "既婚者"
					IF TALENT:対象:既婚者 == NO:PLAYER
						倍率 += 40
					ELSE
						倍率 -= 80
					ENDIF
			ENDSELECT
		NEXT
ENDSELECT

IF TALENT:PLAYER:謎の魅力
	倍率 += 40
ELSEIF TALENT:PLAYER:魅力 || TALENT:PLAYER:魅惑
	倍率 += 20
ENDIF

倍率 = MAX(倍率, 20)

SIF SIGN(上昇値) == 1
	上昇値 = 上昇値*倍率/100

SIF 上昇値 == 0
	RETURN

好感度:対象:好感度種類 += 上昇値

IF (SEX(対象) == 2 || NAME:対象 == "ハニー") && 好感度種類 == "舎弟"
	PRINTFORML 好感度\@ SIGN(上昇値) == 1 ? 上昇 # 下降 \@:%NAME:対象%(母性\@ SIGN(上昇値) == 1 ? + #\@{上昇値})
ELSE
	PRINTFORML 好感度\@ SIGN(上昇値) == 1 ? 上昇 # 下降 \@:%NAME:対象%(%好感度種類%\@ SIGN(上昇値) == 1 ? + #\@{上昇値})
ENDIF

IF 好感度合計(対象) >= CFLAG:対象:経験値取得履歴*500+500
	PRINTFORML %NAME:PLAYER%の経験値+1(%NAME:対象%の好感度合計{CFLAG:対象:経験値取得履歴*500+500}突破)
	FLAG:経験値++
	CFLAG:対象:経験値取得履歴++
ENDIF

;好感度に応じて能力が上昇
CALL SCHOOL_ABLUP, 対象, 1


@グループ_インモラル計算, デバッグ
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC LCOUNT3
#DIM DYNAMIC インモラル最大値
#DIM DYNAMIC 対象
#DIM DYNAMIC インモラル変動値
#DIM DYNAMIC デバッグ

IF デバッグ
	対象 = デバッグ
	GOTO デバッグ
ENDIF

FOR LCOUNT, 0, 10
	インモラル最大値 = 0
	FOR LCOUNT2, 0, 5
		対象 = 集団行動:LCOUNT:LCOUNT2
		SIF 対象 < 1
			CONTINUE
		インモラル最大値 = MAX(インモラル最大値, CFLAG:対象:インモラル)
	NEXT
	FOR LCOUNT2, 0, 5
		SIF 対象 < 1
			CONTINUE
		対象 = 集団行動:LCOUNT:LCOUNT2
		SIF CFLAG:対象:インモラル >= インモラル最大値
			CONTINUE
		$デバッグ
		インモラル変動値 = インモラル最大値/10
		FOR LCOUNT3, 0, VARSIZE("TALENT")
			SIF !TALENT:対象:LCOUNT3
				CONTINUE
			SELECTCASE TALENTNAME:LCOUNT3
				{
				CASE "衝動的", "寂しがり屋", "幼稚", "好奇心", "貞操無頓着", "解放", "恥薄い", "快感に素直",
					 "即落ち", "濡れやすい", "勃ちやすい", "自慰しやすい", "倒錯的", "男好き", "女好き", "両刀",
				}
					インモラル変動値++
				{
				CASE "冷静", "自制心", "無関心", "保守的", "一線越えない", "貞操観念", "恥じらい",
					 "快感の否定", "濡れにくい", "勃ちにくい", "男嫌い", "女嫌い", "同族嫌悪", 
				}
					インモラル変動値--
			ENDSELECT
		NEXT
		SIF デバッグ
			RETURN インモラル変動値
		SIF インモラル変動値 <= 0
			CONTINUE
		CFLAG:対象:インモラル = MIN(CFLAG:対象:インモラル+インモラル変動値, インモラル最大値)
		DEBUGPRINTFORML %NAME:対象%のインモラル変動+{インモラル変動値} インモラル最大値:{インモラル最大値}
	NEXT
NEXT


@学校リスト生成, 再生成
#DIM 生成済み
#DIM DYNAMIC 再生成
#DIMS DYNAMIC 小学校, 100
#DIMS DYNAMIC 中学校, 100
#DIMS DYNAMIC 高校, 100
#DIM DYNAMIC 学校ID
#DIM DYNAMIC LCOUNT

SIF 生成済み && !再生成
	RETURN RESULT

VARSET 学校名

;BEMANI学園、ボルテ学園、マジックアカデミーは見栄え良くするために先頭
小学校:0 = BEMANI学園初等部
中学校:0 = BEMANI学園中等部
高校:0 = BEMANI学園高等部
SIF FINDELEMENTF(除外学校リスト, "ボルテ学園初等部") == -1
	小学校:FINDELEMENTF(小学校, "") = ボルテ学園初等部
SIF FINDELEMENTF(除外学校リスト, "ボルテ学園中等部") == -1
	中学校:FINDELEMENTF(中学校, "") = ボルテ学園中等部
SIF FINDELEMENTF(除外学校リスト, "ボルテ学園高等部") == -1
	高校:FINDELEMENTF(高校, "") = ボルテ学園高等部
SIF FINDELEMENTF(除外学校リスト, "マジックアカデミー") == -1
	高校:FINDELEMENTF(高校, "") = マジックアカデミー

FOR LCOUNT, 1, CHARANUM
	SIF CSTR:LCOUNT:デフォルト科目 != ""
		CONTINUE
	SIF CSTR:LCOUNT:デフォルト学校名 == ""
		CONTINUE
	SIF CSTR:LCOUNT:デフォルト学校名 == "マジックアカデミー"
		CONTINUE
	SIF !CFLAG:LCOUNT:学年
		CFLAG:LCOUNT:学年 = CSVCFLAG(NO:LCOUNT, GETNUM(CFLAG, "学年"))
	SIF FINDELEMENTF(除外学校リスト, CSTR:LCOUNT:デフォルト学校名) >= 0
		CONTINUE
	SELECTCASE CFLAG:LCOUNT:学年
		CASE 1
			SIF FINDELEMENTF(小学校, CSTR:LCOUNT:デフォルト学校名) == -1
				小学校:FINDELEMENTF(小学校, "") = %CSTR:LCOUNT:デフォルト学校名%
		CASE 2
			SIF FINDELEMENTF(中学校, CSTR:LCOUNT:デフォルト学校名) == -1
				中学校:FINDELEMENTF(中学校, "") = %CSTR:LCOUNT:デフォルト学校名%
		CASE 3
			SIF FINDELEMENTF(高校, CSTR:LCOUNT:デフォルト学校名) == -1
				高校:FINDELEMENTF(高校, "") = %CSTR:LCOUNT:デフォルト学校名%
	ENDSELECT
NEXT

FOR LCOUNT, 0, 100
	SIF 小学校:LCOUNT == ""
		BREAK
	学校名:(学校ID++) = %小学校:LCOUNT%
NEXT
学校ID++
FOR LCOUNT, 0, 100
	SIF 中学校:LCOUNT == ""
		BREAK
	学校名:(学校ID++) = %中学校:LCOUNT%
NEXT
学校ID++
FOR LCOUNT, 0, 100
	SIF 高校:LCOUNT == ""
		BREAK
	学校名:(学校ID++) = %高校:LCOUNT%
NEXT
学校ID++
学校名:学校ID = BEMANI大学

生成済み = 1

@クラスメイト選出, 対象, 選出タイプ
#DIM DYNAMIC 対象
#DIMS DYNAMIC 選出タイプ
;無所属が一番多くなるので余裕を持つ
#DIM DYNAMIC クラスメイト, 300
#DIM DYNAMIC 候補, 5
#DIM DYNAMIC 人数
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2

;第一引数のキャラと同じ学校の生徒を、第二引数で指定した条件で選出する
;RESULT:0～4で最大5人返す 必要なぶんだけRESULTを参照すると良い

SIF データベース参照中
	RETURN

;既にどこかのグループに入ってる場合は無効
SIF 出現率:対象 == -1
	RETURN
;同行中も無効
IF 同行者 == 対象
	出現率:対象 = -1
	RETURN
ENDIF

;グループ候補は出現率を-1に設定する
出現率:対象 = -1

人数 = 0

;無所属と教師は判定しない(暫定)
SIF CSTR:対象:在校 == ""
	RETURN

FOR LCOUNT, 1, CHARANUM
	SIF CSTR:対象:在校 == CSTR:LCOUNT:在校
		クラスメイト:(人数++) = LCOUNT
NEXT

;クラスメイト変数の順番をシャッフルする
FOR LCOUNT, 0, 人数
	SWAP クラスメイト:LCOUNT, クラスメイト:(RAND(LCOUNT, 人数))
NEXT

SELECTCASE 選出タイプ
	;相性の良いクラスメイトを優先
	;同値のキャラが複数いればランダムで選出（上で既にシャッフルしてある）
	CASE "相性"
		FOR LCOUNT, 0, 人数
			;対象は除外
			SIF クラスメイト:LCOUNT == 対象
				CONTINUE
			;既にグループ候補の場合は入れない
			SIF 出現率:(クラスメイト:LCOUNT) == -1
				CONTINUE
			;現在地が確定してる場合も無理
			SIF CSTR:(クラスメイト:LCOUNT):現在地 != ""
				CONTINUE
			FOR LCOUNT2, 0, 5
				{
				IF 候補:LCOUNT2 == 0 ||
				相性値(クラスメイト:LCOUNT, 対象) > 相性値(候補:LCOUNT2, 対象) ||
				相性値(対象, クラスメイト:LCOUNT) > 相性値(対象, 候補:LCOUNT2)
				}
					ARRAYSHIFT 候補, 1, クラスメイト:LCOUNT, LCOUNT2
					;グループ候補は出現率を-1に設定する
					出現率:(クラスメイト:LCOUNT) = -1
					BREAK
				ENDIF
			NEXT
		NEXT
	;ランダム選出
	CASEELSE
		FOR LCOUNT, 0, 人数
			;対象は除外
			SIF クラスメイト:LCOUNT == 対象
				CONTINUE
			;既にグループ候補の場合は入れない
			SIF 出現率:(クラスメイト:LCOUNT) == -1
				CONTINUE
			;現在地が確定してる場合も無理
			SIF CSTR:(クラスメイト:LCOUNT):現在地 != ""
				CONTINUE
			ARRAYSHIFT 候補, 1, クラスメイト:LCOUNT
		NEXT
		ARRAYCOPY "クラスメイト", "候補"
		FOR LCOUNT, 0, 5
			出現率:(候補:LCOUNT) = -1
		NEXT
ENDSELECT

RETURN 候補:0, 候補:1, 候補:2, 候補:3, 候補:4

@グループキャラ選出, 対象, 選出タイプ
#DIM DYNAMIC 対象
#DIMS DYNAMIC 選出タイプ
#DIM DYNAMIC 候補, 5
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC 出現率記録用, 10000
#DIM DYNAMIC 乱数

;上のとほぼ同じだが、こちらは学校ごとではなく全体でグループを作る
;ただし学校が同じでもない、相性が良いわけでもない、何も接点の無いキャラはグループにならない
;RESULT:0～4で最大5人返す 必要なぶんだけRESULTを参照すると良い

SIF データベース参照中
	RETURN

;既にどこかのグループに入ってる場合は無効
SIF 出現率:対象 == -1
	RETURN
;同行中も無効
IF 同行者 == 対象
	出現率:対象 = -1
	RETURN
ENDIF

;グループ候補は出現率を-1に設定する
出現率:対象 = -1
;マリィ、レイヴガール、トルマリンは選出されたら全員-1に設定
;別のキャラから同時に呼ばれないようにする処理はまだ
IF !GROUPMATCH(-1, GETCHARANAME("マリィ"), GETCHARANAME("レイヴガール"), GETCHARANAME("トルマリン"))
	IF GROUPMATCH(対象, GETCHARANAME("マリィ"), GETCHARANAME("レイヴガール"), GETCHARANAME("トルマリン"))
		出現率:GETCHARANAME("マリィ") = -1
		出現率:GETCHARANAME("レイヴガール") = -1
		出現率:GETCHARANAME("トルマリン") = -1
	ENDIF
ENDIF

;番号が変わるので対象の値をNOにしておく
対象 = NO:対象

ARRAYCOPY "出現率", "出現率記録用"

;キャラの順番をシャッフルする
FOR LCOUNT, 1, CHARANUM
	乱数 = RAND(LCOUNT, CHARANUM)
	SWAPCHARA LCOUNT, 乱数
	SWAP 出現率記録用:LCOUNT, 出現率記録用:乱数
NEXT

SELECTCASE 選出タイプ
	;相性の良いキャラを優先
	;同値のキャラが複数いればランダムで選出
	CASE "相性"
		FOR LCOUNT, 1, CHARANUM
			;対象自身は除外
			SIF LCOUNT == GETCHARA(対象)
				CONTINUE
			;既にグループ候補の場合は入れない
			SIF 出現率記録用:LCOUNT == -1
				CONTINUE
			;現在地が確定してる場合も無理
			SIF CSTR:LCOUNT:現在地 != ""
				CONTINUE
			;相性、学校、血縁のいずれかも接点が無いキャラは除外
			SIF CSTR:GETCHARA(対象):在校 != "" && CSTR:GETCHARA(対象):在校 == CSTR:LCOUNT:在校
				GOTO CLEAR
			SIF CSTR:GETCHARA(対象):在任 != "" && CSTR:GETCHARA(対象):在任 == CSTR:LCOUNT:在任
				GOTO CLEAR
			SIF CFLAG:GETCHARA(対象):血縁コード && CFLAG:GETCHARA(対象):血縁コード == CFLAG:LCOUNT:血縁コード
				GOTO CLEAR
			SIF 相性値(GETCHARA(対象), LCOUNT) > 100
				GOTO CLEAR
			SIF 相性値(LCOUNT, GETCHARA(対象)) > 100
				GOTO CLEAR
			CONTINUE

			$CLEAR
			FOR LCOUNT2, 0, 5
				{
				IF 候補:LCOUNT2 == 0 ||
				相性値(LCOUNT, GETCHARA(対象)) > 相性値(GETCHARA(候補:LCOUNT2), GETCHARA(対象)) ||
				相性値(GETCHARA(対象), LCOUNT) > 相性値(GETCHARA(対象), GETCHARA(候補:LCOUNT2))
				}
					;こっちは後でキャラ番号戻るのでNOで入れる
					ARRAYSHIFT 候補, 1, NO:LCOUNT, LCOUNT2
					BREAK
				ENDIF
			NEXT
		NEXT
	;接点のあるキャラをランダム選出
	CASEELSE
		FOR LCOUNT, 1, CHARANUM
			;対象自身は除外
			SIF LCOUNT == GETCHARA(対象)
				CONTINUE
			;既にグループ候補の場合は入れない
			SIF 出現率:LCOUNT == -1
				CONTINUE
			;現在地が確定してる場合も無理
			SIF CSTR:LCOUNT:現在地 != ""
				CONTINUE
			;相性、学校、血縁のいずれかも接点が無いキャラは除外
			SIF CSTR:GETCHARA(対象):在校 != "" && CSTR:GETCHARA(対象):在校 == CSTR:LCOUNT:在校
				GOTO CLEARELSE
			SIF CSTR:GETCHARA(対象):在任 != "" && CSTR:GETCHARA(対象):在任 == CSTR:LCOUNT:在任
				GOTO CLEARELSE
			SIF CFLAG:GETCHARA(対象):血縁コード && CFLAG:GETCHARA(対象):血縁コード == CFLAG:LCOUNT:血縁コード
				GOTO CLEARELSE
			SIF 相性値(GETCHARA(対象), LCOUNT) > 100
				GOTO CLEARELSE
			SIF 相性値(LCOUNT, GETCHARA(対象)) > 100
				GOTO CLEARELSE
			CONTINUE

			$CLEARELSE
			;こっちは後でキャラ番号戻るのでNOで入れる
			ARRAYSHIFT 候補, 1, NO:LCOUNT
		NEXT
ENDSELECT

;最後にNOでソートしなおす
SORTCHARA NO

;グループ候補は出現率を-1に設定する
FOR LCOUNT, 0, 5
	SIF 候補:LCOUNT
		出現率:GETCHARA(候補:LCOUNT) = -1
NEXT

RETURN GETCHARA(候補:0), GETCHARA(候補:1), GETCHARA(候補:2), GETCHARA(候補:3), GETCHARA(候補:4)
